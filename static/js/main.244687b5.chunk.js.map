{"version":3,"sources":["api.ts","types/Status.ts","TodosContext.tsx","components/Loader/Loader.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/TodoModal/TodoModal.tsx","components/TodoApp.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","initialTodos","TodosContext","React","createContext","todos","visibleTodos","selectedTodo","setSelectedTodo","setFilter","setQuery","query","TodosProvider","children","useState","setTodos","ALL","filter","todo","ACTIVE","completed","COMPLETED","title","includes","toLowerCase","value","useMemo","useEffect","ts","Provider","Loader","className","TodoFilter","useContext","onChange","e","target","type","placeholder","length","style","pointerEvents","onClick","TodoList","map","id","classNames","TodoModal","user","setUser","isLoad","setIsLoad","userId","u","finally","href","email","name","TodoApp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.244687b5.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n// export const getUser = () => get<User[]>('/users');\n","export enum Status {\n  ALL = 'All',\n  ACTIVE = 'Active',\n  COMPLETED = 'Completed',\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Status } from './types/Status';\n\nconst initialTodos: Todo[] = [];\n\ntype TodosContextType = {\n  todos: Todo[];\n  visibleTodos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (_todo: Todo) => void;\n  setFilter: React.Dispatch<React.SetStateAction<Status>>;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n  query: string;\n};\n\nexport const TodosContext = React.createContext<TodosContextType>({\n  todos: initialTodos,\n  visibleTodos: initialTodos,\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n  setFilter: () => {},\n  setQuery: () => {},\n  query: '',\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(Status.ALL);\n  const [query, setQuery] = useState('');\n\n  const visibleTodos = todos.filter(todo => {\n    switch (filter) {\n      case Status.ACTIVE:\n        return todo.completed === true;\n\n      case Status.COMPLETED:\n        return todo.completed === false;\n\n      case Status.ALL:\n      default:\n        return todo;\n    }\n  }).filter(todo => todo.title.includes(query.toLowerCase()));\n\n  const value = useMemo(() => ({\n    todos,\n    visibleTodos,\n    selectedTodo,\n    setSelectedTodo,\n    setFilter,\n    setQuery,\n    query,\n  }), [todos, selectedTodo, visibleTodos, query]);\n\n  useEffect(() => {\n    getTodos().then(ts => setTodos(ts));\n  }, []);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useContext } from 'react';\nimport { TodosContext } from '../../TodosContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter = () => {\n  const { setFilter, setQuery, query } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter(e.target.value as Status)}\n          >\n            <option value={Status.ALL}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodoList: React.FC = () => {\n  const { visibleTodos, setSelectedTodo } = useContext(TodosContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {visibleTodos.map(todo => {\n          const {\n            // userId,\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n\n        {/* <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n        <tr data-cy=\"todo\" className=\"has-background-info-light\">\n          <td className=\"is-vcentered\">2</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">6</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">\n              qui ullam ratione quibusdam voluptatem quia omnis\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">8</td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { TodosContext } from '../../TodosContext';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n  const [isLoad, setIsLoad] = useState(true);\n\n  useEffect(() => {\n    if (selectedTodo !== null) {\n      getUser(selectedTodo.userId).then(u => setUser(u))\n        .finally(() => setIsLoad(false));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoad ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null as unknown as Todo)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? ('Done') : ('Planned')}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport { Loader } from './Loader';\nimport { TodoFilter } from './TodoFilter';\nimport { TodoList } from './TodoList';\nimport { TodosContext } from '../TodosContext';\nimport { TodoModal } from './TodoModal';\n\nexport const TodoApp: React.FC = () => {\n  const { visibleTodos, selectedTodo } = useContext(TodosContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!visibleTodos.length && (\n                <Loader />\n              )}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodosProvider } from './TodosContext';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <TodosProvider>\n      <TodoApp />\n    </TodosProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}